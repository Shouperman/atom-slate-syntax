
// Base Syntax Styles

.syntax--comment {
  color: @light-gray;
}


.syntax--keyword {
  color: @red;

  &.syntax--control {
    color: @red;
  }

  &.syntax--operator {
    color: @orange;
  }

  &.syntax--other.syntax--special-method {
    color: @hard-yellow;
  }

  &.syntax--other.syntax--unit {
    color: @orange;
  }
}


.syntax--storage {
  color: @red;

  &.syntax--modifier {
    color: @purple;
  }
}


.syntax--constant {
  color: @hard-cyan;

  &.syntax--character.syntax--escape {
    color: @cyan;
  }

  &.syntax--language {
    color: @red;
  }

  &.syntax--numeric {
    color: @purple;
  }

  &.syntax--other.syntax--color {
    color: @cyan;
  }

  &.syntax--other.syntax--symbol {
    color: @green;
  }
}


.syntax--variable {
  color: @blue;

  &.syntax--other.syntax--property {
    color: @syntax-text-color;
  }

  &.syntax--interpolation {
    color: darken(@blue, 10%);
  }

  &.syntax--parameter.syntax--function {
    color: @syntax-text-color;
  }
}


.syntax--invalid.syntax--illegal {
  background-color: @hard-red;
  color: @syntax-background-color;
}


.syntax--string {
  &.syntax--quoted.syntax--single {
    color: @cyan;
  }

  &.syntax--quoted.syntax--double {
    color: @green;
  }

  &.syntax--regexp {
    color: @orange;
  }

  &.syntax--other {
    color: @hard-cyan;
  }
}


.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
      color: @light-gray;
    }

    &.syntax--variable {
      color: @blue;
    }

    &.syntax--string {
      color: inherit;
    }

    &.syntax--parameters,
    &.syntax--array {
      color: @syntax-text-color;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @blue;
    }

    &.syntax--bold {
      color: darken(@blue, 10%);
      font-weight: bold;
    }

    &.syntax--italic {
      color: @purple;
      font-style: italic;
    }

    &.syntax--tag {
      color: darken(@syntax-text-color, 5%);
    }
  }

  &.syntax--terminator {
    color: @orange;
  }

  &.syntax--section.syntax--embedded {
    color: darken(@red, 10%);
  }

}

.syntax--support {
  &.syntax--class {
    color: @syntax-text-color;
  }

  &.syntax--function  {
    color: @purple;

    &.syntax--any-method {
      color: @cyan;
    }
  }

  &.syntax--other.syntax--namespace {
    color: darken(@syntax-text-color, 20%);
  }
}

.syntax--entity {
  // color: @green;

  &.syntax--name {
    color: @syntax-text-color;
  }

  &.syntax--name.syntax--function {
    color: @hard-cyan;
  }

  &.syntax--name.syntax--tag {
    color: @blue;
  }

  &.syntax--other.syntax--attribute-name {
    color: @red;
  }

  &.syntax--other.syntax--alias {
    color: @syntax-text-color;
  }
}


.syntax--meta {
  // &.syntax--class {  // Applys to all symbols within a class.
  //   color: @syntax-text-color;
  // }

  &.syntax--function-call,
  &.syntax--method-call {
    // color: @syntax-text-color;  // Less specific than entities within; redefine sub classes to target.
  }

  &.syntax--link {
    color: @hard-cyan;;
  }

  &.syntax--require {
    color: @blue;
  }

  &.syntax--selector {
    color: @purple;
  }

  &.syntax--separator {
    background-color: @gray;
    color: @syntax-text-color;
  }

  &.syntax--use {
    color: darken(@syntax-text-color, 20%);
  }
}

.syntax--none {
  color: @syntax-text-color;
}


.syntax--markup {
  &.syntax--bold {
    color: darken(@blue, 10%);
    font-weight: bold;
  }

  &.syntax--changed {
    color: @orange;
  }

  &.syntax--deleted {
    color: @red;
  }

  &.syntax--italic {
    color: @purple;
    font-style: italic;
  }

  &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
    color: @blue;
  }

  &.syntax--inserted {
    color: @green;
  }

  &.syntax--list {
    color: @red;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw.syntax--inline {
    color: @green;
  }
}


.syntax--source {
  &.syntax--gfm .syntax--markup {
    -webkit-font-smoothing: auto;
    &.syntax--heading {
      color: @green;
    }
  }
}
